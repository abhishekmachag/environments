name: Reusable workflow

on:
  workflow_call:
    inputs:
      target-env:
        required: true
        type: string
      target-runner: 
        required: true
        type: string

jobs:
  deploy:
    name: Deploy to ${{ inputs.target-env }}
    runs-on: ${{ inputs.target-runner }}
    environment:
      name: ${{ inputs.target-env }}
      # url: ${{ steps.step_id.outputs.url_output }}
    steps:
      - name: "Deploy to Azure Dev"
        if: inputs.target-runner == 'windows-latest'
        run: |
          # Add your deployment script or commands for the chosen environment
          echo "Deploying to ${{ inputs.target-env }} and ${{ inputs.target-runner }}"

  deploy-ab:
    name: Deploy to ${{ inputs.target-env }}
    needs: deploy
    runs-on: ${{ inputs.target-runner }}
    environment:
      name: ${{ inputs.target-env }}
      # url: ${{ steps.step_id.outputs.url_output }}
    steps:
      - name: "Deploy to Azure Prod"
        if: inputs.target-runner == 'ubuntu-latest'
        run: |
          # Add your deployment script or commands for the chosen environment
          echo "Deploying to ${{ inputs.target-env }} and ${{ inputs.target-runner }}"







# name: Env Workflow
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: 'Select environment'
#         required: true
#         type: environment

# jobs:
#   build:
#     runs-on: windows-2019
#     steps:
#     - name: build
#       run: |
#         # Add your deployment script or commands for the dev environment
#           echo "build script"
#   deploy-APP:
#     needs: build
#     runs-on: ${{ matrix.environment }}
#     strategy:
#       matrix:
#         environment: [windows-2019, windows-latest]
#       fail-fast: true
#     environment:
#       name: ${{ matrix.environment }}
#     steps:
#       - run: echo "ðŸŽ‰ target evn ${{ matrix.environment}}"
#       - run: echo "${{env.name}}"
#       - name: Deploy to ${{ matrix.environment }}
#         if: matrix.environment == 'windows-2019'
#         run: |
#           # Add your deployment script or commands for the chosen environment
#           echo "Deploying to ${{ matrix.environment }}"

#       - name: Deploy to ${{ matrix.environment }}
#         if: matrix.environment == 'windows-latest'
#         run: |
#           # Add your deployment script or commands for the chosen environment
#           echo "Deploying to ${{ matrix.environment }}"


          

